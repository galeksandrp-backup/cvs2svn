# (Be in -*- python -*- mode.)

# As a partial check that the example options file is functional, we
# use it as the basis for this test.  We only need to overwrite the
# output option to get the output repository in the location expected
# by the test infrastructure.

execfile('cvs2svn-example.options')

from cvs2svn_lib.fulltext_revision_recorder \
     import SimpleFulltextRevisionRecorderAdapter
from cvs2svn_lib.git_revision_recorder import GitRevisionRecorder
from cvs2svn_lib.git_output_option import GitOutputOption


ctx.trunk_only = False
ctx.cross_project_commits = False
ctx.cross_branch_commits = False
ctx.username = 'cvs2svn'

ctx.output_option = GitOutputOption('cvs2svn-tmp/git-dump.dat')

ctx.revision_recorder = SimpleFulltextRevisionRecorderAdapter(
    RCSRevisionReader('co'),
    GitRevisionRecorder('cvs2svn-tmp/git-blob.dat'),
    )
ctx.revision_excluder = NullRevisionExcluder()
ctx.revision_reader = None

del run_options.projects[:]

run_options.add_project(
    Project(
        r'test-data/main-cvsrepos',
        symbol_transforms=[
            # See cvs2svn-example.options for more documention about
            # symbol transforms.
            ReplaceSubstringsSymbolTransform('\\','/'),
            NormalizePathsSymbolTransform(),
            ],
        symbol_strategy_rules=[
            # See cvs2svn-example.options for more documention about
            # strategy rules.
            UnambiguousUsageRule(),
            HeuristicPreferredParentRule(),
            ],
        )
    )
