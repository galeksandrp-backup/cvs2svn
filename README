cvs2svn.py: a script to create SVN repositories from CVS repositories.

   ****************************** Warning ******************************
   *                                                                   *
   *          This is BETA SOFTWARE; your mileage may vary.            *
   *                                                                   *
   *                  http://cvs2svn.tigris.org/                       *
   *                                                                   *
   *********************************************************************

Prerequisites:
==============

  - Install RCS.  cvs2svn.py uses the "co" command.  The RCS home page
    is http://www.cs.purdue.edu/homes/trinkle/RCS/.

  - Get at least Python 2.0; see http://www.python.org/.

  - Make sure you have GNU 'sort' installed, or some other sort
    program that handles large files other than by reading them
    entirely into memory.  GNU sort is part of the coreutils
    package, see http://www.gnu.org/software/coreutils/.

Installation:
=============

  - As root, run 'make install'.

  - Or, if you do not wish to install cvs2svn.py on your system, you
    can simply run it out of this directory.  As long as it can find
    the 'cvs2svn_rcsparse' library, it should be happy.

Basic Usage:
============

  To create a new Subversion repository by converting an existing CVS
  repository, run the script like this:

     $ cvs2svn.py -s NEW_SVNREPOS CVSREPOS

  To create a new Subversion repository containing only trunk commits,
  and omitting all branches and tags from the CVS repository, do

     $ cvs2svn.py --trunk-only -s NEW_SVNREPOS CVSREPOS

  To create a Subversion dumpfile (suitable for 'svnadmin load') from
  a CVS repository, run it like this:

     $ cvs2svn.py --dump-only --dumpfile DUMPFILE CVSREPOS

  As it works, cvs2svn.py will create many temporary files in the
  current directory.  This is normal.  If the entire conversion is
  successful, however, those tempfiles will be automatically removed.
  If the conversion is not successful, or if you specify the
  '--skip-cleanup' option, cvs2svn will leave the temporary files
  behind for possible debugging.

  To see more options, run:

     $ cvs2svn.py --help

  To report a bug, see the file BUGS.

  To contribute to cvs2svn development, see http://cvs2svn.tigris.org/,
  and check out the latest sources with

     $ svn co http://svn.collab.net/repos/cvs2svn/trunk/ cvs2svn
